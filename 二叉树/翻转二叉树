我们从根节点开始，递归地对树进行遍历，并从叶子节点先开始翻转。
如果当前遍历到的节点root 的左右两棵子树都已经翻转，
那么我们只需要交换两棵子树的位置，即可完成以root 为根节点的整棵子树的翻转。


/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func invertTree(root *TreeNode) *TreeNode {
    if root == nil {
        return nil
    }
    left := invertTree(root.Left)
    right := invertTree(root.Right)
    root.Left = right
    root.Right = left
    return root
}
